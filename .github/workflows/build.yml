name: Build and Release Fusion CLI Tool with Installers

on:
  push:
    tags:
      - "release_*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13.2'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      # macOS installer
      - name: Create macOS .pkg installer
        if: runner.os == 'macOS'
        run: |
          pyinstaller --onefile fusion.py
          mkdir dist-macos
          mv dist/fusion dist-macos/fusion
          # Use pkgbuild or create a .dmg for macOS
          pkgbuild --identifier com.example.fusion --version 1.0 --install-location /usr/local/bin dist-macos/fusion dist-macos/fusion.pkg

      # Windows installer
      - name: Install Inno Setup (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install innosetup

      - name: Create Windows .exe installer
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile fusion.py
          mkdir dist-windows
          mv dist\\fusion.exe dist-windows\\fusion.exe
          # Use Inno Setup to create the installer, make sure to reference the .iss script
          innoisetup.exe /INPUT=build/installer_script.iss /OUTPUT=dist-windows/fusion-installer.exe

      # Upload installer artifacts
      - name: Upload installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fusion-installers
          path: |
            dist-macos/*.pkg
            dist-windows/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all installer artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
